{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUser","Id","usersFromServer","find","userId","App","useState","todoList","setTodoList","setTitle","setUserId","showErrorTitle","setShowErrorTitle","showErrorUser","setShowErrorUser","addTodo","trim","toCreate","Math","max","prev","action","method","onSubmit","event","preventDefault","type","placeholder","value","onChange","e","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09eab998.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title, completed, user, id,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\n\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUser(Id: number): User | null {\n  const foundUser = usersFromServer.find((user) => user.id === Id);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map((todo) => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [todoList, setTodoList] = useState(todos);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n\n  const [showErrorTitle, setShowErrorTitle] = useState(false);\n  const [showErrorUser, setShowErrorUser] = useState(false);\n\n  const showError = () => {\n    if (!title && !userId) {\n      setShowErrorTitle(true);\n      setShowErrorUser(true);\n    }\n\n    if (!title) {\n      return setShowErrorTitle(true);\n    }\n\n    return setShowErrorUser(true);\n  };\n\n  const inputHandler = (value: string) => {\n    setShowErrorTitle(false);\n\n    return setTitle(value);\n  };\n\n  const selectHandler = (value: number) => {\n    setShowErrorUser(false);\n\n    return setUserId(value);\n  };\n\n  const addTodo = (id: number) => {\n    const passForm = () => {\n      setShowErrorTitle(false);\n      setShowErrorUser(false);\n      setTitle('');\n      setUserId(0);\n    };\n\n    if (userId && title.trim()) {\n      const newId = Math.max(...todoList.map((todo) => todo.id)) + 1;\n\n      const toCreate = {\n        id: newId,\n        title,\n        completed: false,\n        userId,\n        user: getUser(id),\n      };\n\n      passForm();\n\n      return setTodoList((prev) => [...prev, toCreate]);\n    }\n\n    return showError();\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    addTodo(userId);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label>\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Please enter a title\"\n              value={title}\n              onChange={(e) => inputHandler(e.target.value)}\n            />\n            {showErrorTitle && (\n              <span className=\"error\">Please enter a title</span>\n            )}\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label>\n            <select\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={(e) => {\n                selectHandler(+e.target.value);\n              }}\n            >\n              <option value=\"0\" disabled>\n                Choose a user\n              </option>\n              {usersFromServer.map(({ name, id }) => (\n                <option value={id} key={id}>\n                  {name}\n                </option>\n              ))}\n            </select>\n            {showErrorUser && (\n              <span className=\"error\">Please choose a user</span>\n            )}\n          </label>\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={todoList} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}